// minimal shader for testing
#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_scalar_block_layout : require

layout(binding = 0, set = 0, rgba32f) uniform image2D image;
layout(binding = 1, set = 0) uniform accelerationStructureEXT TLAS;

layout(location = 0) rayPayloadEXT struct hitPayload {
    vec3 color;
} payload;

struct Camera {
    vec3 origin;
    vec3 lower_left_corner;
    vec3 horizontal;
    vec3 vertical;
};

layout(push_constant, scalar) uniform cam {
    Camera camera;
};

vec3 generateDir(Camera camera, vec2 uv) {
    return camera.lower_left_corner + uv.x * camera.horizontal + uv.y * camera.vertical - camera.origin;
}

void main() {
    // camera stuff
    vec2 uv = vec2(gl_LaunchIDEXT.xy) / vec2(gl_LaunchSizeEXT.xy);
    uv.y -= 1;
    uv.y *= -1;
    vec3 direction = generateDir(camera, uv);
    traceRayEXT(TLAS, gl_RayFlagsOpaqueEXT, 0xFF, 0, 0, 0, camera.origin, 0.001, direction, 10000.0, 0);
    imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(payload.color, 1.0));
}
